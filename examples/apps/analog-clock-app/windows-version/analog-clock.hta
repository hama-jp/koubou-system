<html>
<head>
<HTA:APPLICATION 
    ID="AnalogClock"
    APPLICATIONNAME="Analog Clock"
    BORDER="none"
    CAPTION="no"
    SHOWINTASKBAR="yes"
    SINGLEINSTANCE="yes"
    SYSMENU="no"
    SCROLL="no"
    WINDOWSTATE="normal"
    CONTEXTMENU="no"
/>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Analog Clock Widget</title>
<style type="text/css">
body {
  margin: 0;
  padding: 0;
  background: linear-gradient(135deg, #667eea, #764ba2);
  overflow: hidden;
  cursor: move;
}

#container {
  width: 200px;
  height: 200px;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
}

#clockCanvas {
  width: 180px;
  height: 180px;
  background: white;
  border-radius: 50%;
  box-shadow: 0 10px 40px rgba(0, 0, 0, 0.3);
}

#closeBtn {
  position: absolute;
  top: 5px;
  right: 5px;
  width: 20px;
  height: 20px;
  background: rgba(255, 85, 85, 0.9);
  color: white;
  border: none;
  border-radius: 50%;
  cursor: pointer;
  font-size: 12px;
  font-weight: bold;
  line-height: 18px;
  text-align: center;
  opacity: 0;
}

#container:hover #closeBtn {
  opacity: 1;
}

#pinBtn {
  position: absolute;
  top: 5px;
  left: 5px;
  width: 20px;
  height: 20px;
  background: rgba(100, 126, 234, 0.9);
  color: white;
  border: none;
  border-radius: 50%;
  cursor: pointer;
  font-size: 10px;
  line-height: 18px;
  text-align: center;
  opacity: 0;
}

#container:hover #pinBtn {
  opacity: 1;
}

.pinned {
  background: rgba(255, 170, 0, 0.9) !important;
}
</style>
<script language="JScript">
// Global variables
var canvas, ctx, radius;
var isDragging = false;
var mouseX = 0;
var mouseY = 0;
var isPinned = false;

function windowLoad() {
  // Window size
  window.resizeTo(220, 220);
  
  // Position bottom right
  var sw = window.screen.availWidth;
  var sh = window.screen.availHeight;
  window.moveTo(sw - 240, sh - 250);
  
  // Initialize canvas
  canvas = document.getElementById('clockCanvas');
  ctx = canvas.getContext('2d');
  
  // Set canvas size
  canvas.width = 180;
  canvas.height = 180;
  
  // Set drawing origin to center
  ctx.translate(90, 90);
  radius = 85;
  
  // Start clock
  drawClock();
  window.setInterval(drawClock, 1000);
}

function drawClock() {
  drawFace();
  drawNumbers();
  drawTime();
}

function drawFace() {
  // Clear canvas
  ctx.save();
  ctx.setTransform(1, 0, 0, 1, 0, 0);
  ctx.clearRect(0, 0, canvas.width, canvas.height);
  ctx.restore();
  
  // White circle background
  ctx.beginPath();
  ctx.arc(0, 0, radius, 0, 2 * Math.PI);
  ctx.fillStyle = '#fff';
  ctx.fill();
  
  // Border gradient
  ctx.beginPath();
  ctx.arc(0, 0, radius * 0.95, 0, 2 * Math.PI);
  ctx.strokeStyle = '#333';
  ctx.lineWidth = radius * 0.02;
  ctx.stroke();
  
  // Center point
  ctx.beginPath();
  ctx.arc(0, 0, radius * 0.05, 0, 2 * Math.PI);
  ctx.fillStyle = '#333';
  ctx.fill();
}

function drawNumbers() {
  var ang;
  var num;
  ctx.font = radius * 0.15 + 'px Arial';
  ctx.textBaseline = 'middle';
  ctx.textAlign = 'center';
  ctx.fillStyle = '#333';
  
  // Draw 12, 3, 6, 9
  var numbers = [12, 3, 6, 9];
  var angles = [3, 0, 1, 2]; // Positions for 12, 3, 6, 9
  
  for (var i = 0; i < numbers.length; i++) {
    num = numbers[i];
    ang = angles[i] * Math.PI / 2;
    ctx.save();
    ctx.rotate(ang);
    ctx.translate(0, -radius * 0.82);
    ctx.rotate(-ang);
    ctx.fillText(num.toString(), 0, 0);
    ctx.restore();
  }
  
  // Draw hour marks
  for (num = 1; num <= 12; num++) {
    ang = num * Math.PI / 6;
    ctx.save();
    ctx.rotate(ang);
    ctx.beginPath();
    
    if (num % 3 === 0) {
      // Already have numbers, skip
      ctx.restore();
      continue;
    }
    
    // Small marks for other hours
    ctx.moveTo(0, -radius * 0.9);
    ctx.lineTo(0, -radius * 0.85);
    ctx.strokeStyle = '#666';
    ctx.lineWidth = radius * 0.01;
    ctx.stroke();
    ctx.restore();
  }
}

function drawTime() {
  var now = new Date();
  var hour = now.getHours();
  var minute = now.getMinutes();
  var second = now.getSeconds();
  
  // Hour hand
  hour = hour % 12;
  hour = (hour * Math.PI / 6) + 
         (minute * Math.PI / (6 * 60)) +
         (second * Math.PI / (360 * 60));
  drawHand(hour, radius * 0.5, radius * 0.07, '#333');
  
  // Minute hand
  minute = (minute * Math.PI / 30) + (second * Math.PI / (30 * 60));
  drawHand(minute, radius * 0.8, radius * 0.05, '#666');
  
  // Second hand
  second = (second * Math.PI / 30);
  drawHand(second, radius * 0.9, radius * 0.02, '#ff0000');
}

function drawHand(pos, length, width, color) {
  ctx.beginPath();
  ctx.lineWidth = width;
  ctx.lineCap = 'round';
  ctx.strokeStyle = color;
  ctx.moveTo(0, 0);
  ctx.rotate(pos);
  ctx.lineTo(0, -length);
  ctx.stroke();
  ctx.rotate(-pos);
}

// Dragging functions
function dragStart() {
  if (window.event.srcElement.id == 'closeBtn' || 
      window.event.srcElement.id == 'pinBtn') {
    return;
  }
  if (!isPinned) {
    isDragging = true;
    mouseX = window.event.clientX;
    mouseY = window.event.clientY;
  }
}

function dragMove() {
  if (!isDragging || isPinned) return;
  
  var newX = window.event.clientX;
  var newY = window.event.clientY;
  
  window.moveBy(newX - mouseX, newY - mouseY);
}

function dragEnd() {
  isDragging = false;
}

function closeApp() {
  window.close();
}

function togglePin() {
  isPinned = !isPinned;
  var btn = document.getElementById('pinBtn');
  if (isPinned) {
    btn.className = 'pinned';
    btn.innerHTML = '!';
  } else {
    btn.className = '';
    btn.innerHTML = 'P';
  }
}
</script>
</head>
<body onload="windowLoad()" onmousedown="dragStart()" onmousemove="dragMove()" onmouseup="dragEnd()">

<div id="container">
  <button id="closeBtn" onclick="closeApp()">Ã—</button>
  <button id="pinBtn" onclick="togglePin()">P</button>
  <canvas id="clockCanvas"></canvas>
</div>

</body>
</html>