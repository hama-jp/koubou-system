**generated_content.txt**

```
=== index.html ===
<!DOCTYPE html>
<html lang="ja">
<head>
<meta charset="UTF-8">
<title>レスポンシブタスク管理アプリ</title>
<link rel="stylesheet" href="style.css">
</head>
<body>
<header>
  <h1>タスク管理</h1>
  <button id="newTaskBtn">新規タスク</button>
</header>
<main>
  <aside id="sidebar">
    <h2>フィルタ</h2>
    <input type="text" id="searchInput" placeholder="検索">
    <select id="statusFilter">
      <option value="">すべて</option>
      <option value="todo">Todo</option>
      <option value="inprogress">進行中</option>
      <option value="done">完了</option>
    </select>
  </aside>
  <section id="taskContainer" class="grid">
    <!-- タスクカードがここに挿入される -->
  </section>
</main>

<div id="modal" class="modal hidden">
  <div class="modal-content">
    <h2 id="modalTitle">タスク作成</h2>
    <form id="taskForm">
      <input type="hidden" id="taskId">
      <label>タイトル <input type="text" id="title" required></label>
      <label>説明 <textarea id="description"></textarea></label>
      <label>ステータス
        <select id="status">
          <option value="todo">Todo</option>
          <option value="inprogress">進行中</option>
          <option value="done">完了</option>
        </select>
      </label>
      <label>期限 <input type="date" id="dueDate"></label>
      <button type="submit">保存</button>
      <button type="button" id="cancelBtn">キャンセル</button>
    </form>
  </div>
</div>

<script src="app.js"></script>
</body>
</html>

=== style.css ===
body{margin:0;font-family:Arial,Helvetica,sans-serif;background:#f5f5f5;color:#333;}
header{background:#2196F3;color:white;padding:1rem;display:flex;justify-content:space-between;align-items:center;}
header h1{margin:0;font-size:1.5rem;}
header button{background:#1976D2;border:none;padding:0.5rem 1rem;color:white;border-radius:4px;cursor:pointer;}
main{display:flex;min-height:calc(100vh - 64px);}
#sidebar{background:#fff;padding:1rem;width:250px;box-shadow:2px 0 5px rgba(0,0,0,0.1);}
#sidebar h2{margin-top:0;}
#sidebar input, #sidebar select{width:100%;margin-bottom:0.5rem;padding:0.4rem;border:1px solid #ccc;border-radius:4px;}
#taskContainer{flex:1;padding:1rem;display:grid;grid-template-columns:repeat(auto-fill,minmax(250px,1fr));gap:1rem;}
.card{background:#fff;padding:1rem;border-radius:4px;box-shadow:0 2px 4px rgba(0,0,0,0.1);display:flex;flex-direction:column;justify-content:space-between;}
.card h3{margin:0 0 0.5rem 0;font-size:1.2rem;}
.card p{flex:1;margin:0 0 0.5rem 0;}
.card .actions{display:flex;justify-content:flex-end;}
.card .actions button{background:#1976D2;border:none;color:white;padding:0.3rem 0.6rem;margin-left:0.3rem;border-radius:4px;cursor:pointer;}
.modal{position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.5);display:flex;justify-content:center;align-items:center;}
.modal.hidden{display:none;}
.modal-content{background:#fff;padding:1.5rem;border-radius:4px;width:90%;max-width:500px;}
.modal-content h2{margin-top:0;}
.modal-content form label{display:block;margin-bottom:0.5rem;}
.modal-content form input[type="text"], .modal-content form textarea, .modal-content form select, .modal-content form input[type="date"]{width:100%;padding:0.4rem;border:1px solid #ccc;border-radius:4px;}
.modal-content form button{margin-right:0.5rem;padding:0.5rem 1rem;border:none;border-radius:4px;cursor:pointer;}
.modal-content form button[type="submit"]{background:#2196F3;color:white;}
.modal-content form button#cancelBtn{background:#ccc;color:#333;}
@media(max-width:768px){main{flex-direction:column;}
#sidebar{width:100%;box-shadow:none;}
#taskContainer{grid-template-columns:1fr;}
}
@media(max-width:480px){header h1{font-size:1.2rem;}
header button{padding:0.4rem 0.8rem;}
}

=== app.js ===
const apiBase = 'http://localhost:8090/api/tasks';
let tasks = [];
let ws;

document.addEventListener('DOMContentLoaded', () => {
  fetchTasks();
  initWebSocket();
  document.getElementById('newTaskBtn').addEventListener('click', () => openModal());
  document.getElementById('taskForm').addEventListener('submit', submitTask);
  document.getElementById('cancelBtn').addEventListener('click', closeModal);
  document.getElementById('searchInput').addEventListener('input', renderTasks);